sequenceDiagram
    autonumber
    participant AutoTester
    participant Parser
    participant Controller
    participant DesignExtr
    participant PKB
    
    %% Assumption: This sd only focus on parsing %
    AutoTester ->> Parser: parse(sourcefile)

        % Assumption: Parser will check correctness while building tree %

        Parser ->> Parser: createNewTree()

        %% todo: extract into separate sequence diagram, representing interactions within the Parser %%
        loop hasNextStatement()

        Parser -->> Parser: check_create_node() 
        %%Refer to parser_nodes.mmd for the above statement
        Parser -->> Parser: get_relationships_in_line() 

        loop whileHasRelationship()
            Parser -->> Controller: addRelationship(Node n1, Node n2, RSType rs) 
        end
        Parser -->> Controller: addEntity(Node n)

        end

        Parser ->> Controller: sendAST(AST tree)

        %% Transitive => Parents*, Children* Follows*, FollowedBy* Use, UsedBy, Modifies, ModifiesBy
        Controller ->> DesignExtr: extractTransitiveRelationships(List<HashTable> relationships, List<Node> entities)
        DesignExtr -->> Controller: return

        Controller ->> PKB: storeAST_HashTable_Entity(AST tree, List<HashTable> ht, List<Node> entities)
        %% By right, AST should not be used for resolving queries (anything, we try to add aux Data Structures)
    Parser -->> AutoTester: parseStatus::int
    %% This program ends when preprocessing is finish %% 
