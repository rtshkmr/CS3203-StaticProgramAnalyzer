<?xml-stylesheet type="text/xsl" href="analysis.xsl"?>
<test_results>
<info>
<name>autotester</name><parsing_time_taken>35.000000</parsing_time_taken>
</info>
<queries>
<query>
<id ReturnTuple="1" CondNum="1" RelNum="0" comment="Simple statement">1</id><querystr><![CDATA[stmt s; Select s]]></querystr>
<stuans>1,2,3,4,5,6,7,8,9</stuans>
<correct>1,2,3,4,5,6,7,8,9</correct>
<time_taken>20.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" CondNum="1" RelNum="0" comment="Simple assign">2</id><querystr><![CDATA[assign a; Select a]]></querystr>
<stuans>1,3,4,5,6,8,9</stuans>
<correct>1,3,4,5,6,8,9</correct>
<time_taken>19.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" CondNum="1" RelNum="0" comment="Simple print">3</id><querystr><![CDATA[print p; Select p]]></querystr>
<stuans>2</stuans>
<correct>2</correct>
<time_taken>14.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" CondNum="1" RelNum="0" comment="Simple read">4</id><querystr><![CDATA[read r; Select r]]></querystr>
<stuans>7</stuans>
<correct>7</correct>
<time_taken>15.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" CondNum="1" RelNum="0" comment="Simple variable">5</id><querystr><![CDATA[variable v; Select v]]></querystr>
<stuans>z,y,x,me,i</stuans>
<correct>x,y,z,i,me</correct>
<time_taken>15.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" CondNum="1" RelNum="0" comment="Multiple declarations (same line)">6</id><querystr><![CDATA[assign a1, a2; Select a1]]></querystr>
<stuans>1,3,4,5,6,8,9</stuans>
<correct>1,3,4,5,6,8,9</correct>
<time_taken>15.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Follows="1" SuchThat="1" CondNum="3" RelNum="1" comment="Single follows clause">7</id><querystr><![CDATA[assign a; print p; Select a such that Follows(a, p)]]></querystr>
<stuans>1</stuans>
<correct>1</correct>
<time_taken>31.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Follows="1" SuchThat="1" CondNum="3" RelNum="1" comment="Single follows clause">8</id><querystr><![CDATA[assign a1, a2; Select a1 such that Follows(a1, a2)]]></querystr>
<stuans>3,4,5,8</stuans>
<correct>3,4,5,8</correct>
<time_taken>29.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Follows="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" comment="Follows with one wildcard (first)">9</id><querystr><![CDATA[assign a1, a2; Select a2 such that Follows(_, a2)]]></querystr>
<stuans>3,4,5,6,8,9</stuans>
<correct>3,4,5,6,8,9</correct>
<time_taken>31.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Follows="1" UnnamedVar="2" SuchThat="1" CondNum="5" RelNum="1" comment="Follows with two wildcard (both)">10</id><querystr><![CDATA[assign a1, a2; Select a1 such that Follows(_, _)]]></querystr>
<stuans>1,3,4,5,6,8,9</stuans>
<correct>1,3,4,5,6,8,9</correct>
<time_taken>31.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Follows="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" comment="Follows with one wildcard (second) with target in group">11</id><querystr><![CDATA[assign a1, a2; Select a1 such that Follows(a1, _)]]></querystr>
<stuans>1,3,4,5,6,8</stuans>
<correct>1,3,4,5,6,8</correct>
<time_taken>31.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Follows="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" comment="Follows with one wildcard (second) with target not in group">12</id><querystr><![CDATA[assign a1, a2; Select a1 such that Follows(a2, _)]]></querystr>
<stuans>1,3,4,5,6,8,9</stuans>
<correct>1,3,4,5,6,8,9</correct>
<time_taken>99.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Parent="1" UnnamedVar="2" SuchThat="1" CondNum="5" RelNum="1" comment="Parent with 2 wildcard but Simple program has no such relationship">13</id><querystr><![CDATA[assign a1, a2; Select a1 such that Parent(_, _)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>32.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" UnnamedVar="2" Pattern="1" CondNum="4" RelNum="0" comment="Pattern query with both wildcard">14</id><querystr><![CDATA[assign a1, a2; Select a1 pattern a1 (_, _)]]></querystr>
<stuans>1,3,4,5,6,8,9</stuans>
<correct>1,3,4,5,6,8,9</correct>
<time_taken>35.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" UnnamedVar="2" Pattern="1" CondNum="4" RelNum="0" comment="Pattern query with 1 wildcard">15</id><querystr><![CDATA[assign a1; Select a1 pattern a1 (_, _"x"_)]]></querystr>
<stuans>4,5,8</stuans>
<correct>4,5,8</correct>
<time_taken>38.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" UnnamedVar="1" Pattern="1" CondNum="3" RelNum="0" comment="Pattern query with variable and exists">16</id><querystr><![CDATA[assign a1, a2; Select a1 pattern a1 ("z", _"z"_)]]></querystr>
<stuans>5,8,9</stuans>
<correct>5,8,9</correct>
<time_taken>35.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Uses="1" SuchThat="1" CondNum="3" RelNum="1" comment="Uses query (single synonym with 1 value)">17</id><querystr><![CDATA[assign a1; variable v1; Select a1 such that Uses(a1, "i")]]></querystr>
<stuans>3,8</stuans>
<correct>3,8</correct>
<time_taken>26.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" UnnamedVar="1" Uses="1" SuchThat="1" CondNum="4" RelNum="1" comment="Uses query (single synonym with wildcard)">18</id><querystr><![CDATA[assign a1; variable v1; Select v1 such that Uses(a1, _)]]></querystr>
<stuans>z,y,x,me,i</stuans>
<correct>x,y,z,i,me</correct>
<time_taken>34.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Uses="1" SuchThat="1" CondNum="3" RelNum="1" comment="Uses query (no synonym with wildcard and value)">19</id><querystr><![CDATA[assign a1; variable v1; Select v1 such that Uses(7, "me")]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>29.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Uses="1" SuchThat="1" CondNum="3" RelNum="1" comment="Uses query (double synonym)">20</id><querystr><![CDATA[assign a1; variable v1; Select v1 such that Uses(a1, v1)]]></querystr>
<stuans>z,y,x,i</stuans>
<correct>x,y,i,z</correct>
<time_taken>30.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" UnnamedVar="1" Uses="1" Pattern="1" SuchThat="1" CondNum="5" RelNum="1" comment="Combination of cases (No boolean)">21</id><querystr><![CDATA[stmt s1; assign a1; variable v1; Select s1 such that Uses(s1, v1) pattern a1(v1, _"z"_)]]></querystr>
<stuans>5,8,9</stuans>
<correct>5,8,9</correct>
<time_taken>41.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" UnnamedVar="1" Uses="1" Pattern="1" SuchThat="1" CondNum="5" RelNum="1" comment="Combination of cases (one non-boolean, one boolean)">22</id><querystr><![CDATA[stmt s1; assign a1; variable v1, v2; Select s1 such that Uses(s1, v1) pattern a1(v2, _"z"_)]]></querystr>
<stuans>1,2,3,4,5,8,9</stuans>
<correct>1,2,3,4,5,8,9</correct>
<time_taken>40.000000</time_taken>
<passed/>
</query>
</queries>
</test_results>
